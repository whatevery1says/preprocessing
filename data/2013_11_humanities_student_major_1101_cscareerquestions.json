{"doc_id": "1735", "name": "2013_11_humanities_student_major_1101_cscareerquestions", "namespace": "we1sv2.0", "metapath": "", "pub": "cscareerquestions", "title": "2013-11-humanities-student-major_1101_cscareerquestions.txt", "pub_date": "2013-11-18T00:00:00Z", "Sentiment": "0.167", "Subjectivity": "0.338", "Score": "3", "Upvotes": "3", "Downvotes": "0", "Wordcount": "352", "Permalink": "None", "Threadlink": "None", "Parent_id": "t3_1qvmot", "Reddit_id": "cdh6drd", "Subreddit_id": "t5_2sdpm", "Commenter": "seashelly3", "length": "2125", "content_scrubbed": "I'm a transfer to a CS career myself. I was originally in a Ph. D program in the Humanities before it became clear that academia was not for me. I'd worked in graphic design and front-end web development in college - lots of HTML and CSS, some PHP and MySQL. Now I work almost exclusively in PHP and MySQL. My official job title is \"Business and Technical Applications Analyst I\" but informally around the office, I'm a \"web developer\".\n\nI'm still relatively new, so thus far I spend a lot of my time tackling small bugs and rewriting pages to be slightly better. Once I'm more up to speed, I'll be delving deeper into the CMS and working to optimize the database operations across the website, since we have a lot of users and a priority for us is to make our site faster. \n\nIn addition to brushing up on math, I like to recommend that people look into symbolic logic classes. I was a philosophy student initially, and I think my training in logic has helped me in my CS career as much as any of my CS classes. When I was a Ph. D student, I taught some college logic courses, and bar none the best logic text I've come across is [The Power of Logic 5e](http://www. amazon. com/The-Power-Logic-Frances-Howard-Snyder-ebook/dp/B008JNZ3SO/ref=sr_1_1?ie=UTF8&qid=1384789109&sr=8-1&keywords=power+of+logic+5e). (It is admittedly a little pricey.) Luckily, it also comes with a free to use [companion website] (http://www. poweroflogic. com/cgi/menu. cgi) that, while not ideal for use on its own, might be useful as a resource. If you do use it, I recommend focusing on chapters 1, 7, 8, and 9. \n\nAlso, I don't know if this is an option for you, but I've seen it recommended that, rather than getting another time-consuming bachelor[.] degree, you can actually directly pursue a Masters degree (perhaps after some catch-up courses.) I'm actually doing something to that effect; I get tuition credit through work, so I am getting an 18-credit programming certificate that[.] designed for people with a non-CS background who want to pursue a Masters in Computer Science. \n\nFeel free to ask any questions, either here or by PM. :)"}