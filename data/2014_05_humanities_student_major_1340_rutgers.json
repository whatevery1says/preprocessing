{"doc_id": "1446", "name": "2014_05_humanities_student_major_1340_rutgers", "namespace": "we1sv2.0", "metapath": "", "pub": "rutgers", "title": "2014-05-humanities-student-major_1340_rutgers.txt", "pub_date": "2014-05-21T00:00:00Z", "Sentiment": "0.09", "Subjectivity": "0.374", "Score": "12", "Upvotes": "12", "Downvotes": "0", "Wordcount": "345", "Permalink": "None", "Threadlink": "None", "Parent_id": "t3_264lo5", "Reddit_id": "chnn50c", "Subreddit_id": "t5_2risk", "Commenter": "dlp211", "length": "1909", "content_scrubbed": "CE/CS double major with a minor in Economics here.\n\nCS and CE are somewhat redundant, but the courses offered by the ECE department pale in comparison with the CS department, especially if you want to get into software (even lower level stuff).  I received this bit of advice when I was going into my sophomore year so let me pass it on to you: take every course you can with the CS department if there is an equivalency, even if it means you take a substantially larger amount of credits.\n\nThe big one is avoid PM I/II like the plague.  Take the CS111/112/214 + an ECE elective.  Now you will notice that you are replacing 7 credits with 15, don't worry about it, you'll be better off.  The reason is that PM I/II claims to be the equivalent of the others, but it[.] not even close.  In the CS track, they actually teach you a language and its idioms, data structures, and then with 214 you get to learn some cool low level stuff that will set you up for success in OS.\n\nMy economics minor has been brought up in interviews before as well, a lot of employers like to see some soft skills, and its fairly easy to get since it is really only 1 extra course and fills out all your humanities requirements.\n\nAlso a CS minor is very easy to pick up just by doing the above substitution and a few others that aren't as painful credit wise.  And my final piece of advice is this: it doesn't matter if you go into software or hardware, if you want to break into the computer industry with a decent employer (eg: Google, Microsoft, Amazon, etc), then you need to study and program/build beyond the classroom. My bookshelf is filled with books on algorithms, data structures, design patterns, languages, editors, and even interviewing.  The last one might be a surprise, but interviewing is its own skill, and the technical interview is a different beast then the soft interview that other companies/industries may use."}